From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Jake <jake.m.potrebic@gmail.com>
Date: Sat, 13 Nov 2021 12:36:26 -0800
Subject: [PATCH] Per world ticks per spawn settings


diff --git a/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java b/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java
index 5a5db15493cd9b83815c36487c2f38cb8ac76f3a..4b5ab56d2a9b7de186d6467258e10fdd8157c04e 100644
--- a/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java
+++ b/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java
@@ -730,6 +730,14 @@ public class PaperWorldConfig {
         }
     }
 
+    public Reference2IntMap<MobCategory> perWorldTicksPerSpawns = new Reference2IntOpenHashMap<>(net.minecraft.world.level.NaturalSpawner.SPAWNING_CATEGORIES.length);
+    private void setPerWorldTicksPerSpawns() {
+        perWorldTicksPerSpawns.defaultReturnValue(-1);
+        for (final MobCategory category : net.minecraft.world.level.NaturalSpawner.SPAWNING_CATEGORIES) {
+            perWorldTicksPerSpawns.put(category, getInt("ticks-per-spawn." + category.getName(), perWorldTicksPerSpawns.getInt(category)));
+        }
+    }
+
     public int lightQueueSize = 20;
     private void lightQueueSize() {
         lightQueueSize = getInt("light-queue-size", lightQueueSize);
diff --git a/src/main/java/net/minecraft/world/level/Level.java b/src/main/java/net/minecraft/world/level/Level.java
index 4247dcb003626535dbb997f48ad9f61380bd17e9..a34106102fc6e1ce8c7ad052aefb29ba19c8e729 100644
--- a/src/main/java/net/minecraft/world/level/Level.java
+++ b/src/main/java/net/minecraft/world/level/Level.java
@@ -308,17 +308,26 @@ public abstract class Level implements LevelAccessor, AutoCloseable {
     }
     // Paper end - optimise checkDespawn
 
+    // Paper start - per world ticks per spawn
+    private int ticksPerSpawn(net.minecraft.world.entity.MobCategory category, int bukkitDefault) {
+        final int perWorld = this.paperConfig.perWorldTicksPerSpawns.getInt(category);
+        if (perWorld >= 0) {
+            return perWorld;
+        }
+        return bukkitDefault;
+    }
+    // Paper end
     protected Level(WritableLevelData worlddatamutable, ResourceKey<Level> resourcekey, final DimensionType dimensionmanager, Supplier<ProfilerFiller> supplier, boolean flag, boolean flag1, long i, org.bukkit.generator.ChunkGenerator gen, org.bukkit.generator.BiomeProvider biomeProvider, org.bukkit.World.Environment env, java.util.concurrent.Executor executor) { // Paper - Async-Anti-Xray - Pass executor
         this.spigotConfig = new org.spigotmc.SpigotWorldConfig(((net.minecraft.world.level.storage.PrimaryLevelData) worlddatamutable).getLevelName()); // Spigot
         this.paperConfig = new com.destroystokyo.paper.PaperWorldConfig(((net.minecraft.world.level.storage.PrimaryLevelData) worlddatamutable).getLevelName(), this.spigotConfig); // Paper
         this.generator = gen;
         this.world = new CraftWorld((ServerLevel) this, gen, biomeProvider, env);
-        this.ticksPerAnimalSpawns = this.getCraftServer().getTicksPerAnimalSpawns(); // CraftBukkit
-        this.ticksPerMonsterSpawns = this.getCraftServer().getTicksPerMonsterSpawns(); // CraftBukkit
-        this.ticksPerWaterSpawns = this.getCraftServer().getTicksPerWaterSpawns(); // CraftBukkit
-        this.ticksPerWaterAmbientSpawns = this.getCraftServer().getTicksPerWaterAmbientSpawns(); // CraftBukkit
-        this.ticksPerWaterUndergroundCreatureSpawns = this.getCraftServer().getTicksPerWaterUndergroundCreatureSpawns(); // CraftBukkit
-        this.ticksPerAmbientSpawns = this.getCraftServer().getTicksPerAmbientSpawns(); // CraftBukkit
+        this.ticksPerAnimalSpawns = this.ticksPerSpawn(net.minecraft.world.entity.MobCategory.CREATURE, this.getCraftServer().getTicksPerAnimalSpawns()); // CraftBukkit // Paper
+        this.ticksPerMonsterSpawns = this.ticksPerSpawn(net.minecraft.world.entity.MobCategory.MONSTER, this.getCraftServer().getTicksPerMonsterSpawns()); // CraftBukkit // Paper
+        this.ticksPerWaterSpawns = this.ticksPerSpawn(net.minecraft.world.entity.MobCategory.WATER_CREATURE,this.getCraftServer().getTicksPerWaterSpawns()); // CraftBukkit // Paper
+        this.ticksPerWaterAmbientSpawns = this.ticksPerSpawn(net.minecraft.world.entity.MobCategory.WATER_AMBIENT, this.getCraftServer().getTicksPerWaterAmbientSpawns()); // CraftBukkit // Paper
+        this.ticksPerWaterUndergroundCreatureSpawns = this.ticksPerSpawn(net.minecraft.world.entity.MobCategory.UNDERGROUND_WATER_CREATURE, this.getCraftServer().getTicksPerWaterUndergroundCreatureSpawns()); // CraftBukkit // Paper
+        this.ticksPerAmbientSpawns = this.ticksPerSpawn(net.minecraft.world.entity.MobCategory.AMBIENT, this.getCraftServer().getTicksPerAmbientSpawns()); // CraftBukkit // Paper
         // CraftBukkit end
         this.profiler = supplier;
         this.levelData = worlddatamutable;
